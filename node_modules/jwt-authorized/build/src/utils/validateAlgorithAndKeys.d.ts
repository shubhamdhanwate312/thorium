import { Algorithm } from 'jws';
import { HSSignerAndVerifyerKeys, RSVerifyerOnlyKeys, RSSignerAndVerifyerKeys } from './canUse';
declare type HMACFamilyAlgorithms = 'HS256' | 'HS384' | 'HS512';
declare type RSAFamilyAlgorithms = 'RS256' | 'RS384' | 'RS512';
declare type ValidAlgorithmAndKeys = {
    algorithm: HMACFamilyAlgorithms;
    keys: HSSignerAndVerifyerKeys;
} | {
    algorithm: RSAFamilyAlgorithms;
    keys: RSSignerAndVerifyerKeys;
} | {
    algorithm: RSAFamilyAlgorithms;
    keys: RSVerifyerOnlyKeys;
};
export declare const validateAlgorithm: (algo: string) => Algorithm | never;
export default function getValidAlgorithmAndKeysObject(algorithm: string, privateKey: string, publicKey?: string): ValidAlgorithmAndKeys | never;
export {};
//# sourceMappingURL=validateAlgorithAndKeys.d.ts.map