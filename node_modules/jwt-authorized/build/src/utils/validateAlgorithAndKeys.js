"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateAlgorithm = void 0;
var validateAlgorithm = function (algo) {
    var algos = ['HS256', 'HS384', 'HS512', 'RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512', 'PS256', 'PS384', 'PS512', 'none'];
    if (algos.indexOf(algo) === -1) {
        throw new Error("Unsupported algorithm value " + algo);
    }
    return algo;
};
exports.validateAlgorithm = validateAlgorithm;
function getValidAlgorithmAndKeysObject(algorithm, privateKey, publicKey) {
    if (publicKey === void 0) { publicKey = ''; }
    var validAlgorithm = exports.validateAlgorithm(algorithm);
    if (validAlgorithm.charAt(0) === 'H') {
        if (privateKey.length <= 0) {
            throw new Error('The private key cannot be an empty string when using HMAC family');
        }
        var keys = {
            privateKey: privateKey
        };
        return {
            algorithm: validAlgorithm,
            keys: keys,
        };
    }
    if (validAlgorithm.charAt(0) === 'R') {
        if (publicKey.length <= 0) {
            throw new Error('One or more keys are missing for RS256 validAlgorithm to work');
        }
        if (privateKey.length <= 0) {
            var keys_1 = {
                publicKey: publicKey
            };
            return {
                algorithm: validAlgorithm,
                keys: keys_1,
            };
        }
        var keys = {
            publicKey: publicKey,
            privateKey: privateKey
        };
        return {
            algorithm: validAlgorithm,
            keys: keys,
        };
    }
    throw new Error("Algorithm " + validAlgorithm + " is not supported, use HS256 or RS256");
}
exports.default = getValidAlgorithmAndKeysObject;
