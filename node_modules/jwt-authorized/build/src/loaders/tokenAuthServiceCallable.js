"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
require("dotenv/config");
var TokenAuthService_1 = __importDefault(require("../services/TokenAuthService"));
var models_1 = require("../models");
var tokenConfigGenerator_1 = __importDefault(require("../config/tokenConfigGenerator"));
var validateAlgorithAndKeys_1 = __importDefault(require("../utils/validateAlgorithAndKeys"));
function callableLoadDictElement(algorithm, privateKey, publicKey, hoursBeforeExpire) {
    if (algorithm === void 0) { algorithm = process.env.JWT_ALGORITHM || 'HS256'; }
    if (privateKey === void 0) { privateKey = process.env.JWT_KEY_PRIVATE || ''; }
    if (publicKey === void 0) { publicKey = process.env.JWT_KEY_PUBLIC || ''; }
    if (hoursBeforeExpire === void 0) { hoursBeforeExpire = process.env.JWT_HOURS_BEFORE_EXPIRE || '1'; }
    var validHoursBeforeExpire = parseInt(hoursBeforeExpire);
    privateKey = privateKey.split('\\n').join("\n");
    publicKey = publicKey.split('\\n').join("\n");
    var algoAndKeys = validateAlgorithAndKeys_1.default(algorithm, privateKey, publicKey);
    var loadDictElement = {
        constructible: TokenAuthService_1.default,
        deps: {
            models: {
                TokenUser: models_1.TokenUser
            },
            tokenConfig: tokenConfigGenerator_1.default(__assign({ expireTokensEveryNHours: validHoursBeforeExpire }, algoAndKeys)),
        },
        locateDeps: {
            events: 'events',
        },
    };
    return loadDictElement;
}
exports.default = callableLoadDictElement;
