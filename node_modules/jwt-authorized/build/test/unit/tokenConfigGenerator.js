"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var tokenConfigGenerator_1 = __importDefault(require("../../src/config/tokenConfigGenerator"));
var nowEpochInSeconds = function () { return Math.floor((new Date()).getTime() / 1000); };
describe('tokenConfigGenerator', function () {
    describe("tokenConfigGenerator({ expireTokensEveryNHours: 1})", function () {
        it('should return an object with properties', function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    chai_1.expect(Object.keys(tokenConfigGenerator_1.default({ expireTokensEveryNHours: 1, algorithm: 'HS256', keys: { privateKey: 'secret' } }))).to.be.deep.equal([
                        'engine',
                        'expiresIn',
                        'now',
                        'algorithm',
                        'keys',
                    ]);
                    return [2 /*return*/];
                });
            });
        });
    });
    describe("tokenConfigGenerator({ expireTokensEveryNHours: 1}).expiresIn", function () {
        it('should be a function', function () {
            var expiresIn = tokenConfigGenerator_1.default({ expireTokensEveryNHours: 1, algorithm: 'HS256', keys: { privateKey: 'secret' } }).expiresIn;
            chai_1.expect(expiresIn).to.be.a('function');
        });
    });
    describe("tokenConfigGenerator({ expireTokensEveryNHours: 0.08}).expiresIn", function () {
        it('should return an epoch in seconds 0.08 hours from now', function () {
            var expiresIn = tokenConfigGenerator_1.default({ expireTokensEveryNHours: 0.08, algorithm: 'HS256', keys: { privateKey: 'secret' } }).expiresIn;
            var numSecondsIn1H1min = Math.floor(0.08 * 60 * 60);
            chai_1.expect(expiresIn()).to.equal(nowEpochInSeconds() + numSecondsIn1H1min);
        });
    });
    describe("tokenConfigGenerator({ expireTokensEveryNHours: 1}).expiresIn()", function () {
        it('should return an number', function () {
            var expiresIn = tokenConfigGenerator_1.default({ expireTokensEveryNHours: 1, algorithm: 'HS256', keys: { privateKey: 'secret' } }).expiresIn;
            chai_1.expect(expiresIn()).to.be.a('number');
        });
        it('should return an epoch in seconds greater than now', function () {
            var expiresIn = tokenConfigGenerator_1.default({ expireTokensEveryNHours: 1, algorithm: 'HS256', keys: { privateKey: 'secret' } }).expiresIn;
            chai_1.expect(expiresIn()).to.be.above(nowEpochInSeconds());
        });
        it('should return an epoch in seconds smaller than 1 hour + 1 min from now', function () {
            var expiresIn = tokenConfigGenerator_1.default({ expireTokensEveryNHours: 1, algorithm: 'HS256', keys: { privateKey: 'secret' } }).expiresIn;
            var numSecondsIn1H1min = 60 * 60 + 60;
            chai_1.expect(expiresIn()).to.be.below(nowEpochInSeconds() + numSecondsIn1H1min);
        });
    });
});
